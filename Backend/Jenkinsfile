pipeline {
    agent any

    environment {
        DB_URL = 'jdbc:mysql://localhost:3306/devops'
        DB_USER = 'root'
        DB_PASSWORD = '' // Update with your actual password
    }

    stages {
        stage('Checkout') {
            steps {
                // Pull the code from the specified branch of your GitHub repository
                git branch: 'MohamedamineTrabelsi_5Arctic3_G4', 
                    url: 'https://github.com/devopsproject976/devops.git', 
                    credentialsId: 'Jenkins_devops' // Use the credentials ID you created
            }
        }

        stage('MySQL Setup') {
            steps {
                script {
                    // Ensure MySQL is running before running the tests
                    echo 'Ensure MySQL is running and the devops database is created.'
                    // You can add commands here to check if MySQL is running
                }
            }
        }

        stage('Build') {
            steps {
                // Change directory to Backend to run Maven commands
                dir('Backend') {
                    // Run Maven clean and package commands
                    sh 'mvn clean package'
                }
            }
        }

        stage('Test') {
            steps {
                dir('Backend') {
                    // Run tests with Maven (JUnit and Mockito included)
                    sh 'mvn test'
                }
            }
        }
    }

    post {
        success {
            // Archive and display test results
            junit 'Backend/target/surefire-reports/*.xml'
            echo 'Build and tests succeeded!'
        }
        failure {
            echo 'Build or test failed.'
        }
    }
    pipeline {
    agent any

    stages {
        // Backend stages
        stage('Build Spring Boot') {
            steps {
                dir('Backend') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('Find Jar Version') {
            steps {
                dir('Backend') {
                    script {
                        // Find the latest jar file in the target folder and store it in an environment variable
                        env.JAR_FILE = sh(script: "ls target/*.jar | grep -v 'original' | head -n 1", returnStdout: true).trim()
                    }
                    echo "Using JAR file: ${env.JAR_FILE}"
                }
            }
        }

        stage('Build Spring Docker Image') {
            steps {
                script {
                    sh 'ls -al'  // List files to check if Dockerfile exists
                    sh 'docker build -t medaminetrabelsi/devopsback -f Backend/Dockerfile .'
                }
            }
        }
}
